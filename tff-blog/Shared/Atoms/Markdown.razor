@using Markdig;
@using Ganss.Xss;
@using ColorCode.Styling;

@inject IHtmlSanitizer HtmlSanitizer

@markupInHtml

<style>
    figure {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

        figure > img {
            max-width: 100%;
            object-fit: fill;
        }

        figure > figcaption {
            margin: 2vh;
            font-weight: bold;
            font-size: 0.7em
        }
</style>

@code {
    private MarkupString markupInHtml;

    [Parameter]
    public required string MarkdownContent { get; set; }

    protected override void OnParametersSet()
    {
        markupInHtml = ConvertStringToMarkupString(MarkdownContent);
    }

    private MarkupString ConvertStringToMarkupString(string value)
    {
        if (!string.IsNullOrWhiteSpace(value))
        {
            var html = Markdig.Markdown.ToHtml(value, new MarkdownPipelineBuilder()
               .UseYamlFrontMatter()
               .UseEmojiAndSmiley()
               .UseAdvancedExtensions()
               .UseSyntaxHighlighting()
               .UseImageAsFigure()
               .Build());
            var sanitizedHtml = HtmlSanitizer.Sanitize(html);

            return new MarkupString(sanitizedHtml);
        }

        return new MarkupString();
    }
}