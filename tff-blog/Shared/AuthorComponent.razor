@using Tff.Blog.Shared.Converters
@inject IHttpClientFactory ClientFactory

@if (author == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="authorbar">
        <img class="photo" src="@this.author.Photo" />
        <p class="name">@this.author.Name</p>
        <Markdown MarkdownContent=@this.author.Text/>
    </div>
}

@code {
    private AuthorModel author;

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("Client");
        var authorRequest = await client.GetAsync($"pages/author.md");
        var authorResult = authorRequest.IsSuccessStatusCode ? await authorRequest.Content.ReadAsStringAsync() : null;

        author = MarkdownToModelConverter.CreateModelFromMarkdown<AuthorModel>(authorResult);
    }
}
