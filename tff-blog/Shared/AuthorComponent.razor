@using Tff.Blog.Shared.Converters
@inject IHttpClientFactory ClientFactory
@inject NavigationManager UriHelper

@if (author == null)
{
    //TODO add skeleton loader
}
else
{
    <div class="authorbar">
        <img class="photo" src="@this.author.Photo" alt="Author photo" />
        <p class="name">@this.author.Name</p>
        <Social />
        <Markdown MarkdownContent=@this.author.Text />
    </div>
}

@code {
    private AuthorModel author;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = ClientFactory.CreateClient("Client");
            var authorRequest = await client.GetAsync($"pages/author.md");
            var authorResult = authorRequest.IsSuccessStatusCode ? await authorRequest.Content.ReadAsStringAsync() : null;

            author = MarkdownToModelConverter.CreateModelFromMarkdown<AuthorModel>(authorResult);
        }
        catch (Exception)
        {
            UriHelper.NavigateTo("404", replace: true);
        }
    }
}
